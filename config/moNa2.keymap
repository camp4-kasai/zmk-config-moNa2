#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 6

&mt {
    flavor = "tap-preferred";
    quick-tap-ms = <0>;
    require-prior-idle-ms = <125>;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <200>;
    require-prior-idle-ms = <125>;
};

/ {
    combos {
        compatible = "zmk,combos";

        middleClick {
            bindings = <&mkp MB3>;
            key-positions = <31 32>;
        };

        coron {
            bindings = <&kp COLON>;
            key-positions = <14 26>;
        };

        semicoron {
            bindings = <&kp SEMICOLON>;
            key-positions = <17 29>;
        };

        comma {
            bindings = <&kp COMMA>;
            key-positions = <14 4>;
        };

        period {
            bindings = <&kp PERIOD>;
            key-positions = <17 5>;
        };

        to_layer0 {
            bindings = <&to 0>;
            key-positions = <27 28>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W         &kp E             &kp R               &kp T                                      &kp Y        &kp U                &kp I              &kp O      &kp P
&kp A        &kp S         &mt LEFT_SHIFT D  &mt LEFT_CONTROL F  &kp G        &none        &kp CAPSLOCK     &kp H        &mt RIGHT_CONTROL J  &mt RIGHT_SHIFT K  &kp L      &kp MINUS
&kp Z        &kp X         &kp C             &kp V               &kp B        &mo 4        &mo 5            &kp N        &kp M                &mkp LCLK          &mkp RCLK  &kp SLASH
&lt 3 LANG2  &kp LEFT_GUI  &kp ESCAPE        &kp LEFT_ALT        &lt 1 SPACE  &lt 2 TAB    &lt 2 BACKSPACE  &lt 1 ENTER                                                     &lt 3 LANG1
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SYMBOL_ARROW {
            bindings = <
&kp CARET    &kp TILDE     &kp PERCENT           &kp AMPERSAND           &kp DOUBLE_QUOTES                        &kp LA(LS(LEFT))  &kp LC(LEFT)   &kp UP_ARROW  &kp LC(RIGHT)  &kp RS(RA(RIGHT))
&kp AT_SIGN  &kp DOLLAR    &mt LEFT_SHIFT MINUS  &mt LEFT_CONTROL EQUAL  &kp SINGLE_QUOTE   &trans    &trans      &kp HOME          &kp LEFT       &kp DOWN      &kp RIGHT      &kp END
&kp HASH     &kp ASTERISK  &kp PIPE              &kp EXCLAMATION         &kp GRAVE          &trans    &trans      &kp COLON         &kp SEMICOLON  &trans        &trans         &kp BACKSLASH
&trans       &trans        &trans                &trans                  &trans             &trans    &kp DELETE  &trans                                                        &trans
            >;

            sensor-bindings = <&inc_dec_kp LEFT RIGHT>;
        };

        NUM {
            bindings = <
&kp PRINTSCREEN  &trans  &trans          &kp LESS_THAN                      &kp GREATER_THAN                                    &kp PERCENT      &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_PLUS
&trans           &trans  &kp LEFT_SHIFT  &mt LEFT_CONTROL LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans               &trans  &kp COLON        &kp KP_N4        &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MINUS
&trans           &trans  &trans          &kp LEFT_BRACE                     &kp RIGHT_BRACE        &trans               &trans  &kp KP_MULTIPLY  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_SLASH
&trans           &trans  &trans          &trans                             &kp LEFT_BRACKET       &kp RIGHT_BRACKET    &trans  &kp KP_NUMBER_0                                                     &kp KP_DOT
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp F1  &kp F2   &kp F3             &kp F4               &trans                                &trans  &trans  &trans  &trans  &trans
&kp F5  &kp F6   &mt LEFT_SHIFT F7  &mt LEFT_CONTROL F8  &trans  &trans                &trans  &trans  &trans  &trans  &trans  &trans
&kp F9  &kp F10  &kp F11            &kp F12              &trans  &kp LA(LC(DELETE))    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans   &trans             &trans               &trans  &trans                &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        FEATURE {
            bindings = <
&trans  &trans  &trans  &trans  &sys_reset                         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans      &trans    &bootloader  &trans        &trans        &trans          &trans        &trans
&trans  &trans  &trans  &trans  &trans      &trans    &mo 0        &trans        &trans        &bt BT_CLR_ALL  &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans      &trans    &trans       &trans                                                    &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MACRO {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        GAME {
            bindings = <
&kp Q             &kp W           &kp E         &kp R          &kp T                                    &kp Y      &kp U  &kp I      &kp O      &kp P
&kp A             &kp S           &kp D         &kp F          &kp G      &trans       &kp ESCAPE       &kp H      &kp J  &kp K      &kp L      &kp MINUS
&kp Z             &kp X           &kp C         &kp V          &kp B      &kp LANG1    &kp LANG2        &kp N      &kp M  &mkp LCLK  &mkp RCLK  &kp RIGHT_SHIFT
&kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp LEFT_ALT  &kp RIGHT_ALT  &kp SPACE  &lt 7 TAB    &lt 7 BACKSPACE  &kp ENTER                               &kp LEFT_CONTROL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        GAME2 {
            bindings = <
&kp F1            &kp F2          &kp F3        &kp F4         &kp F5                            &none      &none           &kp UP_ARROW    &none            &none
&kp NUMBER_1      &kp NUMBER_2    &kp NUMBER_3  &kp NUMBER_4   &kp N5     &trans     &kp ESCAPE  &kp HOME   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END
&kp NUMBER_6      &kp N7          &kp N8        &kp N9         &kp N0     &none      &none       &none      &none           &none           &none            &kp RIGHT_SHIFT
&kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp LEFT_ALT  &kp RIGHT_ALT  &kp SPACE  &kp TAB    &kp DELETE  &kp ENTER                                                   &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };
    };
};
